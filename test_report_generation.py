#!/usr/bin/env python3
"""
Script de test pour la g√©n√©ration de rapports.
"""

import sys
from pathlib import Path

# Ajouter le r√©pertoire src au path
sys.path.insert(0, str(Path(__file__).parent / "src"))

def test_report_generation():
    """Test de la g√©n√©ration de rapports."""
    try:
        from lcpi.aep.commands.network_optimize_unified import _generate_reports
        
        # Donn√©es de test
        index_data = {
            "meta": {"solvers": ["epanet"]},
            "results": {"epanet": "test.json"}
        }
        
        outputs = {
            "epanet": {
                "meta": {"method": "nested", "solver": "epanet"},
                "proposals": [
                    {
                        "name": "Test Proposal",
                        "CAPEX": 1000000,
                        "constraints_ok": True
                    }
                ]
            }
        }
        
        # Test de g√©n√©ration Markdown
        print("üß™ Test de g√©n√©ration de rapport Markdown...")
        _generate_reports(index_data, outputs, "md", Path("test_output"), True)
        
        print("‚úÖ Test r√©ussi !")
        
    except Exception as e:
        print(f"‚ùå Erreur lors du test: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    test_report_generation()
