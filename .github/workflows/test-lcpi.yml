name: Tests LCPI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-lcpi:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install pytest pytest-cov
    
    - name: Run tests
      run: |
        pytest tests/ --cov=src/lcpi --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: true

  integration-test:
    runs-on: ubuntu-latest
    needs: test-lcpi
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install LCPI
      run: |
        pip install -e .
    
    - name: Test end-to-end workflow
      run: |
        # Créer un projet d'exemple
        lcpi project create --name test-aep --template aep-village
        
        # Exécuter des calculs
        cd test-aep
        lcpi aep population data/population.csv --debut 2020 --fin 2030
        
        # Vérifier la génération des logs
        lcpi logs list
        
        # Vérifier l'export reproductible
        lcpi export-repro --output test-repro.tar.gz
        
        # Nettoyer
        cd ..
        rm -rf test-aep test-repro.tar.gz
